{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Camera } from 'expo-camera';\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport Clarifai from 'clarifai';\nimport { useWalletConnect } from '@walletconnect/react-native-dapp';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar apiUrl = 'https://api.cloudinary.com/v1_1/dp8lp5b68/image/upload';\nvar CLARIFAY_KEY = '83e67f71dd034c60b784e4a050228303';\nvar WINDOW_HEIGHT = Dimensions.get('window').height;\nvar CAPTURE_SIZE = Math.floor(WINDOW_HEIGHT * 0.08);\nexport default function ScannerScreen() {\n  var connector = useWalletConnect();\n  var cameraRef = useRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cameraType = _useState4[0],\n      setCameraType = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isPreview = _useState6[0],\n      setIsPreview = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isCameraReady = _useState8[0],\n      setIsCameraReady = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      image = _useState10[0],\n      setImage = _useState10[1];\n\n  var clarifai = new Clarifai.App({\n    apiKey: CLARIFAY_KEY\n  });\n  useEffect(function () {\n    onHandlePermission();\n  }, []);\n\n  var onHandlePermission = function _callee() {\n    var _await$Camera$request, status;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n          case 2:\n            _await$Camera$request = _context.sent;\n            status = _await$Camera$request.status;\n            setHasPermission(status === 'granted');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onCameraReady = function onCameraReady() {\n    setIsCameraReady(true);\n  };\n\n  var switchCamera = function switchCamera() {\n    if (isPreview) {\n      return;\n    }\n\n    setCameraType(function (prevCameraType) {\n      return prevCameraType === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back;\n    });\n  };\n\n  var onSnap = function _callee3() {\n    var options, data, source, base64Img, _data;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!cameraRef.current) {\n              _context3.next = 14;\n              break;\n            }\n\n            console.log('MAGIC CAMERA SEES A: ', cameraRef.current);\n            options = {\n              quality: 0.9,\n              base64: true\n            };\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(cameraRef.current.takePictureAsync(options));\n\n          case 5:\n            data = _context3.sent;\n            source = data.base64;\n\n            if (!source) {\n              _context3.next = 14;\n              break;\n            }\n\n            base64Img = \"data:image/jpg;base64,\" + source;\n            _data = {\n              file: base64Img,\n              upload_preset: 'edscgabu'\n            };\n            _context3.next = 12;\n            return _regeneratorRuntime.awrap(cameraRef.current.pausePreview());\n\n          case 12:\n            setIsPreview(true);\n            fetch(apiUrl, {\n              body: JSON.stringify(_data),\n              headers: {\n                'content-type': 'application/json'\n              },\n              method: 'POST'\n            }).then(function _callee2(response) {\n              var data;\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return _regeneratorRuntime.awrap(response.json());\n\n                    case 2:\n                      data = _context2.sent;\n\n                      if (data.secure_url) {\n                        process.nextTick = setImmediate;\n                        clarifai.models.predict(Clarifai.GENERAL_MODEL, data.secure_url).then(function (response) {\n                          var concepts = response.outputs[0].data.concepts;\n\n                          if (concepts && concepts.length > 0) {\n                            for (var _iterator = _createForOfIteratorHelperLoose(concepts), _step; !(_step = _iterator()).done;) {\n                              var prediction = _step.value;\n\n                              if (prediction.name) {\n                                fetch('https://thirdweb-nextjs-minting-api.vercel.app/api/mint', {\n                                  body: JSON.stringify({\n                                    mintToAddress: connector.accounts[0],\n                                    supply: 1,\n                                    message: prediction.name,\n                                    metadata: {\n                                      name: prediction.name,\n                                      description: prediction.name,\n                                      image: data.secure_url,\n                                      external_url: data.secure_url,\n                                      uri: data.secure_url,\n                                      background_color: '',\n                                      attributes: [{\n                                        value: 'AI reading',\n                                        trait_type: prediction.name\n                                      }]\n                                    }\n                                  }),\n                                  headers: {\n                                    'content-type': 'application/json'\n                                  },\n                                  method: 'POST'\n                                });\n                                Alert.alert(\"Minted NFT for \" + connector.accounts[0] + \" of \" + prediction.name + \"!\");\n                                navigation.navigate('Home');\n                              } else {\n                                Alert.alert('Couldnt mint nft of: ', prediction.name);\n                              }\n\n                              console.log('PREDEICTION FROM CLARIFAI: ', prediction);\n                              return;\n                            }\n                          }\n                        });\n                      }\n\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              Alert.alert('Error Verifiying Blunt');\n              console.log(err);\n            });\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var cancelPreview = function _callee4() {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(cameraRef.current.resumePreview());\n\n          case 2:\n            setIsPreview(false);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (hasPermission === null) {\n    return _jsx(View, {});\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      style: styles.text,\n      children: \"No access to camera\"\n    });\n  }\n\n  return _jsx(TouchableWithoutFeedback, {\n    delayLongPress: 630,\n    onLongPress: function onLongPress() {\n      return navigation.goBack();\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Camera, {\n        ref: cameraRef,\n        style: styles.container,\n        type: cameraType,\n        onCameraReady: onCameraReady,\n        useCamera2Api: true\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [isPreview && _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: {\n              alignSelf: 'center',\n              padding: '80%'\n            },\n            children: !isPreview && _jsx(ActivityIndicator, {\n              size: \"large\",\n              color: \"#00ff00\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: cancelPreview,\n            style: styles.closeButton,\n            activeOpacity: 0.7,\n            children: _jsx(AntDesign, {\n              name: \"close\",\n              size: 32,\n              color: \"#fff\"\n            })\n          })]\n        }), !isPreview && _jsxs(View, {\n          style: styles.bottomButtonsContainer,\n          children: [_jsx(TouchableOpacity, {\n            disabled: !isCameraReady,\n            onPress: switchCamera,\n            children: _jsx(MaterialIcons, {\n              name: \"flip-camera-ios\",\n              size: 28,\n              color: \"white\"\n            })\n          }), _jsx(TouchableOpacity, {\n            activeOpacity: 0.7,\n            disabled: !isCameraReady,\n            onPress: onSnap,\n            style: styles.capture\n          }), _jsx(View, {\n            style: styles.bottomButtonsContainer,\n            children: image && _jsx(Image, {\n              source: {\n                uri: image\n              },\n              style: {\n                width: 200,\n                height: 200\n              }\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({}, StyleSheet.absoluteFillObject),\n  text: {\n    color: '#fff'\n  },\n  bottomButtonsContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    bottom: 20,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  bottomButtonsContainer2: {\n    position: 'absolute',\n    flexDirection: 'column',\n    bottom: 20,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 35,\n    right: 20,\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#5A45FF',\n    opacity: 0.7\n  },\n  capture: {\n    backgroundColor: '#5A45FF',\n    height: CAPTURE_SIZE,\n    width: CAPTURE_SIZE,\n    borderRadius: Math.floor(CAPTURE_SIZE / 2),\n    marginBottom: 28,\n    marginHorizontal: 30\n  }\n});","map":{"version":3,"sources":["/Users/jonathangan/Desktop/marriageRNapp/screens/CaptureScreen.tsx"],"names":["React","useState","useRef","useEffect","Camera","AntDesign","MaterialIcons","useNavigation","Clarifai","useWalletConnect","apiUrl","CLARIFAY_KEY","WINDOW_HEIGHT","Dimensions","get","height","CAPTURE_SIZE","Math","floor","ScannerScreen","connector","cameraRef","hasPermission","setHasPermission","Constants","Type","back","cameraType","setCameraType","isPreview","setIsPreview","isCameraReady","setIsCameraReady","navigation","image","setImage","clarifai","App","apiKey","onHandlePermission","requestCameraPermissionsAsync","status","onCameraReady","switchCamera","prevCameraType","front","onSnap","current","console","log","options","quality","base64","takePictureAsync","data","source","base64Img","file","upload_preset","pausePreview","fetch","body","JSON","stringify","headers","method","then","response","json","secure_url","process","nextTick","setImmediate","models","predict","GENERAL_MODEL","concepts","outputs","length","prediction","name","mintToAddress","accounts","supply","message","metadata","description","external_url","uri","background_color","attributes","value","trait_type","Alert","alert","navigate","catch","err","cancelPreview","resumePreview","styles","text","goBack","container","alignSelf","padding","closeButton","bottomButtonsContainer","capture","width","StyleSheet","create","absoluteFillObject","color","position","flexDirection","bottom","alignItems","justifyContent","bottomButtonsContainer2","top","right","borderRadius","backgroundColor","opacity","marginBottom","marginHorizontal"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-syntax */\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n  StyleSheet,\n  Dimensions,\n  View,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Alert,\n  ActivityIndicator,\n  Button,\n} from 'react-native';\nimport { Camera } from 'expo-camera';\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport Clarifai from 'clarifai';\nimport { useWalletConnect } from '@walletconnect/react-native-dapp';\nimport tw from 'twrnc';\n\nconst apiUrl = 'https://api.cloudinary.com/v1_1/dp8lp5b68/image/upload';\nconst CLARIFAY_KEY = '83e67f71dd034c60b784e4a050228303';\nconst WINDOW_HEIGHT = Dimensions.get('window').height;\nconst CAPTURE_SIZE = Math.floor(WINDOW_HEIGHT * 0.08);\n\nexport default function ScannerScreen() {\n  const connector = useWalletConnect();\n  const cameraRef = useRef();\n  const [hasPermission, setHasPermission] = useState(null);\n  const [cameraType, setCameraType] = useState(Camera.Constants.Type.back);\n  const [isPreview, setIsPreview] = useState(false);\n  const [isCameraReady, setIsCameraReady] = useState(false);\n  const navigation = useNavigation();\n  const [image, setImage] = useState(null);\n\n  const clarifai = new Clarifai.App({\n    apiKey: CLARIFAY_KEY,\n  });\n\n  useEffect(() => {\n    onHandlePermission();\n  }, []);\n\n  const onHandlePermission = async () => {\n    const { status } = await Camera.requestCameraPermissionsAsync();\n    setHasPermission(status === 'granted');\n  };\n\n  const onCameraReady = () => {\n    setIsCameraReady(true);\n  };\n\n  const switchCamera = () => {\n    if (isPreview) {\n      return;\n    }\n    setCameraType(prevCameraType =>\n      prevCameraType === Camera.Constants.Type.back\n        ? Camera.Constants.Type.front\n        : Camera.Constants.Type.back,\n    );\n  };\n\n  const onSnap = async () => {\n    if (cameraRef.current) {\n      console.log('MAGIC CAMERA SEES A: ', cameraRef.current);\n      const options = { quality: 0.9, base64: true };\n      const data = await cameraRef.current.takePictureAsync(options);\n      const source = data.base64;\n\n      if (source) {\n        const base64Img = `data:image/jpg;base64,${source}`;\n        const data = {\n          file: base64Img,\n          upload_preset: 'edscgabu',\n        };\n        await cameraRef.current.pausePreview();\n        setIsPreview(true);\n        fetch(apiUrl, {\n          body: JSON.stringify(data),\n          headers: {\n            'content-type': 'application/json',\n          },\n          method: 'POST',\n        })\n          .then(async response => {\n            const data = await response.json();\n            if (data.secure_url) {\n              process.nextTick = setImmediate; // RN polyfill\n              clarifai.models\n                .predict(Clarifai.GENERAL_MODEL, data.secure_url)\n                .then(response => {\n                  const { concepts } = response.outputs[0].data;\n                  if (concepts && concepts.length > 0) {\n                    for (const prediction of concepts) {\n                      if (prediction.name) {\n                        fetch(\n                          'https://thirdweb-nextjs-minting-api.vercel.app/api/mint',\n                          {\n                            body: JSON.stringify({\n                              mintToAddress: connector.accounts[0],\n                              supply: 1,\n                              message: prediction.name,\n                              metadata: {\n                                name: prediction.name,\n                                description: prediction.name,\n                                image: data.secure_url,\n                                external_url: data.secure_url,\n                                uri: data.secure_url,\n                                background_color: '',\n                                attributes: [\n                                  {\n                                    value: 'AI reading',\n                                    trait_type: prediction.name,\n                                  },\n                                ],\n                              },\n                            }),\n                            headers: {\n                              'content-type': 'application/json',\n                            },\n                            method: 'POST',\n                          },\n                        );\n                        Alert.alert(\n                          `Minted NFT for ${connector.accounts[0]} of ${prediction.name}!`,\n                        );\n                        navigation.navigate('Home');\n                      } else {\n                        // Anything else gets output as alert\n                        Alert.alert('Couldnt mint nft of: ', prediction.name);\n                      }\n\n                      // All Predictions should be logged\n                      console.log('PREDEICTION FROM CLARIFAI: ', prediction);\n                      return;\n                    }\n                  }\n                });\n            }\n          })\n          .catch(err => {\n            Alert.alert('Error Verifiying Blunt');\n            console.log(err);\n          });\n      }\n    }\n  };\n\n  const cancelPreview = async () => {\n    await cameraRef.current.resumePreview();\n    setIsPreview(false);\n  };\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text style={styles.text}>No access to camera</Text>;\n  }\n\n  return (\n    <TouchableWithoutFeedback\n      delayLongPress={630}\n      onLongPress={() => navigation.goBack()}\n    >\n      <View style={styles.container}>\n        <Camera\n          ref={cameraRef}\n          style={styles.container}\n          type={cameraType}\n          onCameraReady={onCameraReady}\n          useCamera2Api\n        />\n        <View style={styles.container}>\n          {isPreview && (\n            <>\n              <View style={{ alignSelf: 'center', padding: '80%' }}>\n                {!isPreview && (\n                  <ActivityIndicator size=\"large\" color=\"#00ff00\" />\n                )}\n              </View>\n              <TouchableOpacity\n                onPress={cancelPreview}\n                style={styles.closeButton}\n                activeOpacity={0.7}\n              >\n                <AntDesign name=\"close\" size={32} color=\"#fff\" />\n              </TouchableOpacity>\n            </>\n          )}\n          {!isPreview && (\n            <View style={styles.bottomButtonsContainer}>\n              <TouchableOpacity\n                disabled={!isCameraReady}\n                onPress={switchCamera}\n              >\n                <MaterialIcons name=\"flip-camera-ios\" size={28} color=\"white\" />\n              </TouchableOpacity>\n              <TouchableOpacity\n                activeOpacity={0.7}\n                disabled={!isCameraReady}\n                onPress={onSnap}\n                style={styles.capture}\n              />\n              <View style={styles.bottomButtonsContainer}>\n                {image && (\n                  <Image\n                    source={{ uri: image }}\n                    style={{ width: 200, height: 200 }}\n                  />\n                )}\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  text: {\n    color: '#fff',\n  },\n  bottomButtonsContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    bottom: 20,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  bottomButtonsContainer2: {\n    position: 'absolute',\n    flexDirection: 'column',\n    bottom: 20,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 35,\n    right: 20,\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#5A45FF',\n    opacity: 0.7,\n  },\n  capture: {\n    backgroundColor: '#5A45FF',\n    // borderRadius: 5,\n    height: CAPTURE_SIZE,\n    width: CAPTURE_SIZE,\n    borderRadius: Math.floor(CAPTURE_SIZE / 2),\n    marginBottom: 28,\n    marginHorizontal: 30,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}