{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Slider from '@react-native-community/slider';\nimport Button from \"./Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#A80421',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n    padding: 10\n  },\n  formLabel: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  inputStyle: {\n    marginTop: 20,\n    width: 300,\n    height: 40,\n    paddingHorizontal: 10,\n    borderRadius: 50,\n    backgroundColor: 'white'\n  }\n});\n\nvar SliderForm = function SliderForm() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currency = _useState10[0],\n      setCurrency = _useState10[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.formLabel,\n      children: \" Create a Budget \"\n    }), _jsxs(View, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Name\",\n        placeholderTextColor: \"#000\",\n        style: styles.inputStyle,\n        value: name,\n        onValueChange: function onValueChange(value) {\n          return setName(value);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Description\",\n        placeholderTextColor: \"#000\",\n        style: styles.inputStyle,\n        value: description,\n        onValueChange: function onValueChange(value) {\n          return setDescription(value);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Currency\",\n        placeholderTextColor: \"#000\",\n        style: styles.inputStyle,\n        value: currency,\n        onValueChange: function onValueChange(value) {\n          return setCurrency(value);\n        }\n      }), _jsx(Text, {\n        style: {\n          marginTop: 16,\n          color: '#fff',\n          fontSize: 15\n        },\n        children: \"How much?\"\n      }), _jsx(Slider, {\n        style: {\n          marginTop: 20\n        },\n        step: 1,\n        minimumValue: 0,\n        maximumValue: 1000000,\n        value: value,\n        onValueChange: function onValueChange(slideValue) {\n          return setValue(slideValue);\n        },\n        minimumTrackTintColor: \"#H9d3d3\",\n        maximumTrackTintColor: \"#FFF\",\n        thumbTintColor: \"#000\"\n      }), _jsxs(Text, {\n        style: {\n          fontSize: 30,\n          color: '#fff',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [\"$\", value]\n      }), _jsx(Button, {\n        label: \"Confirm\"\n      })]\n    })]\n  });\n};\n\nexport default SliderForm;","map":{"version":3,"sources":["/Users/jonathangan/Desktop/marriageRNapp/components/common/SliderForm.tsx"],"names":["React","useState","Slider","Button","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","borderRadius","padding","formLabel","fontSize","color","inputStyle","marginTop","width","height","paddingHorizontal","SliderForm","user","setUser","value","setValue","name","setName","description","setDescription","currency","setCurrency","slideValue"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Text, StyleSheet, View, TextInput, Alert } from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport Button from './Button';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#A80421',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n    padding: 10,\n  },\n\n  formLabel: {\n    fontSize: 20,\n    color: '#fff',\n  },\n  inputStyle: {\n    marginTop: 20,\n    width: 300,\n    height: 40,\n    paddingHorizontal: 10,\n    borderRadius: 50,\n    backgroundColor: 'white',\n  },\n});\n\nconst SliderForm = () => {\n  const [user, setUser] = useState(null);\n  const [value, setValue] = useState(0);\n  const [name, setName] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [currency, setCurrency] = useState(null);\n\n  // const auth = getAuth();\n  // onAuthStateChanged(auth, user => {\n  //   if (user) {\n  //     // User is signed in, see docs for a list of available properties\n  //     // https://firebase.google.com/docs/reference/js/firebase.User\n  //     const { uid } = user;\n  //     setUser(uid);\n  //   }\n  //   console.log('NOT SIGNED IN');\n  // });\n\n  // function storeBudget(user, name, description, value, currency) {\n  //   const db = getDatabase();\n  //   const reference = ref(db, `users/${user}`);\n  //   set(reference, {\n  //     budget: { name, description, value, currency },\n  //   });\n  // }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.formLabel}> Create a Budget </Text>\n      <View>\n        <TextInput\n          placeholder=\"Name\"\n          placeholderTextColor=\"#000\"\n          style={styles.inputStyle}\n          value={name}\n          onValueChange={value => setName(value)}\n        />\n\n        <TextInput\n          placeholder=\"Description\"\n          placeholderTextColor=\"#000\"\n          style={styles.inputStyle}\n          value={description}\n          onValueChange={value => setDescription(value)}\n        />\n\n        <TextInput\n          placeholder=\"Currency\"\n          placeholderTextColor=\"#000\"\n          style={styles.inputStyle}\n          value={currency}\n          onValueChange={value => setCurrency(value)}\n        />\n\n        <Text style={{ marginTop: 16, color: '#fff', fontSize: 15 }}>\n          How much?\n        </Text>\n\n        <Slider\n          style={{ marginTop: 20 }}\n          step={1}\n          minimumValue={0}\n          maximumValue={1000000}\n          value={value}\n          onValueChange={slideValue => setValue(slideValue)}\n          minimumTrackTintColor=\"#H9d3d3\"\n          maximumTrackTintColor=\"#FFF\"\n          thumbTintColor=\"#000\"\n        />\n        <Text\n          style={{\n            fontSize: 30,\n            color: '#fff',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          ${value}\n        </Text>\n        <Button\n          label=\"Confirm\"\n          // onPress={() => storeBudget(uid, name, description, value, currency)}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default SliderForm;\n"]},"metadata":{},"sourceType":"module"}