{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport Loader from \"../components/common/Loader\";\nimport firebase from \"../services/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\nexport var AuthService = firebase.auth();\nexport function AuthProvider(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      authPending = _useState4[0],\n      setAuthPending = _useState4[1];\n\n  useEffect(function () {\n    return AuthService.onAuthStateChanged(function (result) {\n      if (result) {\n        var displayName = result.displayName,\n            email = result.email,\n            uid = result.uid,\n            photoURL = result.photoURL,\n            phoneNumber = result.phoneNumber;\n        var currentUser = {\n          displayName: displayName,\n          email: email,\n          uid: uid,\n          photoURL: photoURL,\n          phoneNumber: phoneNumber,\n          isAdmin: false\n        };\n        setAuthPending(true);\n        result.getIdTokenResult().then(function (_ref) {\n          var claims = _ref.claims;\n          currentUser.isAdmin = Boolean(claims.admin);\n          setUser(currentUser);\n          setAuthPending(false);\n        });\n      } else {\n        setUser(null);\n        setAuthPending(false);\n      }\n    });\n  }, []);\n  var children = props.children;\n\n  if (authPending) {\n    return _jsx(Loader, {});\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      user: user\n    },\n    children: children\n  });\n}","map":{"version":3,"sources":["/Users/jonathangan/Desktop/marriageRNapp/providers/AuthProvider.tsx"],"names":["React","createContext","useEffect","useState","Loader","firebase","AuthContext","AuthService","auth","AuthProvider","props","user","setUser","authPending","setAuthPending","onAuthStateChanged","result","displayName","email","uid","photoURL","phoneNumber","currentUser","isAdmin","getIdTokenResult","then","claims","Boolean","admin","children"],"mappings":";AAAA,OAAOA,KAAP,IACEC,aADF,EAGEC,SAHF,EAIEC,QAJF,QAKO,OALP;AAMA,OAAOC,MAAP;AACA,OAAOC,QAAP;;AAOA,OAAO,IAAMC,WAAW,GAAGL,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,IAAMM,WAAW,GAAGF,QAAQ,CAACG,IAAT,EAApB;AAEP,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAAyD;AAC9D,kBAAwBP,QAAQ,CAAc,IAAd,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAsCT,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOU,WAAP;AAAA,MAAoBC,cAApB;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACd,WAAOK,WAAW,CAACQ,kBAAZ,CAA+B,UAAAC,MAAM,EAAI;AAC9C,UAAIA,MAAJ,EAAY;AACV,YAAQC,WAAR,GAA2DD,MAA3D,CAAQC,WAAR;AAAA,YAAqBC,KAArB,GAA2DF,MAA3D,CAAqBE,KAArB;AAAA,YAA4BC,GAA5B,GAA2DH,MAA3D,CAA4BG,GAA5B;AAAA,YAAiCC,QAAjC,GAA2DJ,MAA3D,CAAiCI,QAAjC;AAAA,YAA2CC,WAA3C,GAA2DL,MAA3D,CAA2CK,WAA3C;AACA,YAAMC,WAAiB,GAAG;AACxBL,UAAAA,WAAW,EAAXA,WADwB;AAExBC,UAAAA,KAAK,EAALA,KAFwB;AAGxBC,UAAAA,GAAG,EAAHA,GAHwB;AAIxBC,UAAAA,QAAQ,EAARA,QAJwB;AAKxBC,UAAAA,WAAW,EAAXA,WALwB;AAMxBE,UAAAA,OAAO,EAAE;AANe,SAA1B;AASAT,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,QAAAA,MAAM,CAACQ,gBAAP,GAA0BC,IAA1B,CAA+B,gBAAgB;AAAA,cAAbC,MAAa,QAAbA,MAAa;AAC7CJ,UAAAA,WAAW,CAACC,OAAZ,GAAsBI,OAAO,CAACD,MAAM,CAACE,KAAR,CAA7B;AACAhB,UAAAA,OAAO,CAACU,WAAD,CAAP;AACAR,UAAAA,cAAc,CAAC,KAAD,CAAd;AACD,SAJD;AAKD,OAjBD,MAiBO;AACLF,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,KAtBM,CAAP;AAuBD,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,MAAQe,QAAR,GAAqBnB,KAArB,CAAQmB,QAAR;;AAEA,MAAIhB,WAAJ,EAAiB;AACf,WAAO,KAAC,MAAD,KAAP;AACD;;AAED,SACE,KAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,IAAI,EAAJA;AADK,KADT;AAAA,cAKGkB;AALH,IADF;AASD","sourcesContent":["import React, {\n  createContext,\n  PropsWithChildren,\n  useEffect,\n  useState,\n} from 'react';\nimport Loader from '../components/common/Loader';\nimport firebase from '../services/firebase';\nimport { User } from '../types/index';\n\ninterface AuthContextValue {\n  user: User | null;\n}\n\nexport const AuthContext = createContext({} as AuthContextValue);\n\nexport const AuthService = firebase.auth();\n\nexport function AuthProvider(props: PropsWithChildren<unknown>) {\n  const [user, setUser] = useState<User | null>(null);\n  const [authPending, setAuthPending] = useState(true);\n\n  useEffect(() => {\n    return AuthService.onAuthStateChanged(result => {\n      if (result) {\n        const { displayName, email, uid, photoURL, phoneNumber } = result;\n        const currentUser: User = {\n          displayName,\n          email,\n          uid,\n          photoURL,\n          phoneNumber,\n          isAdmin: false,\n        };\n        // read claims if necessary\n        setAuthPending(true);\n        result.getIdTokenResult().then(({ claims }) => {\n          currentUser.isAdmin = Boolean(claims.admin);\n          setUser(currentUser);\n          setAuthPending(false);\n        });\n      } else {\n        setUser(null);\n        setAuthPending(false);\n      }\n    });\n  }, []);\n\n  const { children } = props;\n\n  if (authPending) {\n    return <Loader />;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}