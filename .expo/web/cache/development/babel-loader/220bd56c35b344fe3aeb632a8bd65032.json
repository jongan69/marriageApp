{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Text, Heading, Card } from 'native-base';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LineChart } from 'react-native-chart-kit';\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\nimport Screen from \"../components/common/Screen\";\nimport Button from \"../components/common/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    padding: 10\n  },\n  header: {\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 16,\n    marginTop: 16\n  },\n  card: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    padding: 20,\n    margin: 20,\n    backgroundColor: '#FFF'\n  }\n});\n\nvar SpendingChart = function SpendingChart() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"YTD\"\n    }), _jsx(LineChart, {\n      data: {\n        labels: ['January', 'February', 'March', 'April'],\n        datasets: [{\n          data: [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n        }]\n      },\n      width: Dimensions.get('window').width - 16,\n      height: 220,\n      yAxisLabel: \"$\",\n      chartConfig: {\n        backgroundColor: '#1cc910',\n        backgroundGradientFrom: '#eff3ff',\n        backgroundGradientTo: '#efefef',\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 255;\n          return \"rgba(0, 0, 0, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        }\n      },\n      bezier: true,\n      style: {\n        marginVertical: 8,\n        borderRadius: 16\n      }\n    })]\n  });\n};\n\nexport default function BudgetScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(10),\n      _useState2 = _slicedToArray(_useState, 2),\n      goal = _useState2[0],\n      setGoal = _useState2[1];\n\n  return _jsx(_Fragment, {\n    children: _jsxs(Screen, {\n      title: \"Budget\",\n      children: [_jsx(Heading, {\n        size: \"lg\",\n        children: \"Existing Budgets\"\n      }), _jsxs(ScrollView, {\n        children: [_jsx(SpendingChart, {}), _jsxs(Card, {\n          style: styles.card,\n          children: [_jsx(AnimatedCircularProgress, {\n            size: 100,\n            width: 8,\n            fill: goal,\n            tintColor: \"#00e0ff\",\n            backgroundColor: \"#3d5875\",\n            children: function children(goal) {\n              return _jsxs(_Fragment, {\n                children: [_jsx(Text, {\n                  children: \"Budget 1\"\n                }), _jsxs(Text, {\n                  children: [goal, \"%\"]\n                })]\n              });\n            }\n          }), _jsx(Text, {\n            children: \"     \"\n          }), _jsx(Text, {\n            children: \"     \"\n          }), _jsx(AnimatedCircularProgress, {\n            size: 100,\n            width: 8,\n            fill: goal,\n            tintColor: \"#00e0ff\",\n            backgroundColor: \"#3d5875\",\n            children: function children(goal) {\n              return _jsxs(_Fragment, {\n                children: [_jsx(Text, {\n                  children: \"Budget 2\"\n                }), _jsxs(Text, {\n                  children: [goal, \"%\"]\n                })]\n              });\n            }\n          })]\n        })]\n      }), _jsx(Button, {\n        label: \"Create New Budget\",\n        onPress: function onPress() {\n          return navigation.navigate('BudgetBuilder');\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/jonathangan/Desktop/marriageRNapp/screens/BudgetScreen.tsx"],"names":["React","useState","Text","Heading","Card","LineChart","AnimatedCircularProgress","Screen","Button","styles","StyleSheet","create","container","flex","backgroundColor","justifyContent","alignItems","textAlign","padding","header","fontSize","marginTop","card","flexDirection","margin","SpendingChart","labels","datasets","data","Math","random","Dimensions","get","width","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","marginVertical","BudgetScreen","navigation","goal","setGoal","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Text, Heading, Card } from 'native-base';\nimport { ScrollView, Dimensions, StyleSheet } from 'react-native';\nimport { LineChart } from 'react-native-chart-kit';\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\nimport { t } from '../utils';\nimport Screen from '../components/common/Screen';\nimport Button from '../components/common/Button';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    padding: 10,\n  },\n  header: {\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 16,\n    marginTop: 16,\n  },\n  card: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    padding: 20,\n    margin: 20,\n    backgroundColor: '#FFF',\n  },\n});\n\nconst SpendingChart = () => {\n  return (\n    <>\n      <Text style={styles.header}>YTD</Text>\n      <LineChart\n        data={{\n          labels: ['January', 'February', 'March', 'April'],\n          datasets: [\n            {\n              data: [\n                Math.random() * 100,\n                Math.random() * 100,\n                Math.random() * 100,\n                Math.random() * 100,\n                Math.random() * 100,\n                Math.random() * 100,\n              ],\n            },\n          ],\n        }}\n        width={Dimensions.get('window').width - 16} // from react-native\n        height={220}\n        yAxisLabel=\"$\"\n        chartConfig={{\n          backgroundColor: '#1cc910',\n          backgroundGradientFrom: '#eff3ff',\n          backgroundGradientTo: '#efefef',\n          decimalPlaces: 2, // optional, defaults to 2dp\n          color: (opacity = 255) => `rgba(0, 0, 0, ${opacity})`,\n          style: {\n            borderRadius: 16,\n          },\n        }}\n        bezier\n        style={{\n          marginVertical: 8,\n          borderRadius: 16,\n        }}\n      />\n    </>\n  );\n};\n\nexport default function BudgetScreen({ navigation }) {\n  const [goal, setGoal] = useState(10);\n  return (\n    <>\n      <Screen title=\"Budget\">\n        <Heading size=\"lg\">Existing Budgets</Heading>\n        <ScrollView>\n          <SpendingChart />\n          <Card style={styles.card}>\n            <AnimatedCircularProgress\n              size={100}\n              width={8}\n              fill={goal}\n              tintColor=\"#00e0ff\"\n              backgroundColor=\"#3d5875\"\n            >\n              {goal => (\n                <>\n                  <Text>Budget 1</Text>\n                  <Text>{goal}%</Text>\n                </>\n              )}\n            </AnimatedCircularProgress>\n            <Text>     </Text>\n            <Text>     </Text>\n            <AnimatedCircularProgress\n              size={100}\n              width={8}\n              fill={goal}\n              tintColor=\"#00e0ff\"\n              backgroundColor=\"#3d5875\"\n            >\n              {goal => (\n                <>\n                  <Text>Budget 2</Text>\n                  <Text>{goal}%</Text>\n                </>\n              )}\n            </AnimatedCircularProgress>\n          </Card>\n        </ScrollView>\n        <Button\n          label=\"Create New Budget\"\n          onPress={() => navigation.navigate('BudgetBuilder')}\n        />\n      </Screen>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}